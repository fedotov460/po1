project/
│
├── index.html           ← Страница входа
├── dashboard.html       ← Страница после входа
├── app.js               ← Скрипт для обработки входа и проверки токена
├── auth.js              ← Логика авторизации
├── style.css
└── service-worker.js    ← Service Worker


<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Авторизация + Service Worker</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 20px;
    }
    input, button {
      margin: 10px 0;
      padding: 8px;
      width: 100%;
    }
    #network-status {
      position: fixed;
      bottom: 10px;
      left: 10px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <h2>Авторизация</h2>
  <form id="login-form">
    <input type="email" id="email" placeholder="Email" required />
    <input type="password" id="password" placeholder="Пароль" minlength="6" required />
    <button type="submit">Войти</button>
  </form>
  <div id="error-message"></div>
  <div id="network-status"></div>

  <script>
    // Авторизация
    const form = document.getElementById('login-form');
    const errorMessage = document.getElementById('error-message');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const email = form.email.value;
      const password = form.password.value;

      try {
        const res = await fetch('https://yourapi.com/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password })
        });

        if (!res.ok) throw new Error('Ошибка входа');

        const data = await res.json();
        localStorage.setItem('token', data.token);
        localStorage.setItem('user', data.user);
        window.location.href = 'dashboard.html';
      } catch (err) {
        errorMessage.textContent = 'Неверный логин или пароль';
      }
    });

    // Индикация сети
    const statusMessage = document.getElementById('network-status');
    function updateNetworkStatus() {
      statusMessage.textContent = navigator.onLine ? 'Соединение восстановлено' : 'Вы в офлайне';
      statusMessage.style.color = navigator.onLine ? 'green' : 'red';
    }
    window.addEventListener('online', updateNetworkStatus);
    window.addEventListener('offline', updateNetworkStatus);
    updateNetworkStatus();

    // Регистрация Service Worker
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('service-worker.js');
    }
  </script>
</body>
</html>


