from fastapi import FastAPI, HTTPException
from pydantic import BaseModel, EmailStr, constr, validator
import json
import os
from datetime import date, datetime
from typing import List

app = FastAPI()

class Problem(BaseModel):
    reason: constr(regex=r'^(нет доступа к сети|не работает телефон|не приходят письма)$') 
    detection_datetime: datetime 

class Subscriber(BaseModel):
    surname: constr(regex=r'^[А-ЯЁ][а-яё]+$')
    name: constr(regex=r'^[А-ЯЁ][а-яё]+$')
    birth_date: date
    phone_number: constr(regex=r'^\+?[7-9]\d{9}$')
    email: EmailStr
    problems: List[Problem]  # Список причин обращения

    @validator('birth_date')
    def check_birth_date(cls, v):
        if v >= date.today():
            raise ValueError('Дата рождения не может быть в будущем')
        return v

@app.post("/submit/")
async def submit_subscriber(subscriber: Subscriber):
    data = subscriber.dict()
    file_path = "subscribers.json"
    
    if os.path.exists(file_path):
        with open(file_path, "r") as f:
            subscribers = json.load(f)
    else:
        subscribers = []

    subscribers.append(data)

    with open(file_path, "w") as f:
        json.dump(subscribers, f, ensure_ascii=False, indent=4)

    return {"message": "Данные успешно сохранены!"}
